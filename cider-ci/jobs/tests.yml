jobs:

  tests:

    name: Tests

    description: |
      Run all specs.

    priority: 1

    run-on:
    - type: branch
      include-match: ^.+$

    context:

      name: Tests

      task-defaults:
        eager-trials: 1
        max-auto-trials: 1

        environment-variables:
          RAILS_ENV: test
          LANG: "en_US.UTF-8"
          RBENV_VERSION: '2.2.4'

        git-options:
          submodules:
            clone: True
            timeout: 60

        trial-attachments:
          - content-type: text/plain
            include-match: '\.log$'
          - content-type: text/yaml
            include-match: 'config\/.*\.ya?ml$'

        traits:
          firefox-esr: true
          imagemagick: true
          linux: true
          nodejs: true
          postgresql: true
          rbenv: true
          ruby-2.2: true
          ruby: true

        scripts:

          configure-database:
            body: |
              #!/usr/bin/env ruby
              require 'yaml'
              config = \
                { 'test' =>
                  { 'adapter' => 'postgresql',
                    'encoding' => 'unicode',
                    'host' => 'localhost',
                    'pool' => 3,
                    'username' => ENV['PGUSER'],
                    'password' =>  ENV['PGPASSWORD'],
                    'database' => "madek_v3_test_#{ENV['CIDER_CI_TRIAL_ID']}"}}
              File.open('config/database.yml','w') { |file| file.write config.to_yaml }

          bundle-mri:
            exclusive-executor-resource: bundler_2.2
            body: bundle

          create-database:
            body: bundle exec rake db:reset
            start-when:
            - script: bundle-mri
            - script: configure-database

          test:
            body: |
              set -eux
              export USED_RUBY_VERSION=`ruby -v | cut -d ' ' -f 2`
              [[ "$USED_RUBY_VERSION" =~ '2.2.' ]]
              bundle exec rspec $CIDER_CI_TASK_FILE
            start-when:
            - script: create-database

          delete-database:
            body:  bundle exec rake db:pg:terminate_connections db:drop
            ignore-state: true
            start-when:
            - script: test
              states: [aborted, passed, failed, skipped]

      subcontexts:

      - name: Plain
        _cider-ci_generate-tasks:
          include-match: spec/.*_spec.rb
